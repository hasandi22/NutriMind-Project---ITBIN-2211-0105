name: Android CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  matrix-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14, 16, 18]
    steps:
      - name: Simulate Node.js matrix testing
        run: echo "Testing with Node.js version ${{ matrix.node-version }}"

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

  integration-test:
    runs-on: ubuntu-latest
    steps:
      - name: Simulated Integration Test
        run: echo "Simulating integration test..."

  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - name: Simulated E2E Test
        run: echo "Simulating end-to-end user test..."

  build-and-upload:
    runs-on: ubuntu-latest
    needs: [unit-test, integration-test, e2e-test]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
      - name: Build Debug APK
        run: ./gradlew assembleDebug
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Simulate SAST
        run: echo "Static analysis done (e.g., SpotBugs simulated)"
      - name: Simulate SCA
        run: echo "Dependency scanning done (simulated)"
      - name: Simulate DAST
        run: echo "Runtime security check simulated"

  observability:
    runs-on: ubuntu-latest
    steps:
      - name: Log Simulation
        run: |
          echo "Logging user activity..."
          echo "User opens dashboard"
      - name: Metric Simulation
        run: |
          echo "Metric: user_login_success=1"
          echo "Metric: workout_complete=1"
      - name: Alerting Simulation
        run: echo "If pipeline fails, send alert (simulated)"
      - name: Synthetic Monitoring
        run: echo "Simulating login → dashboard → logout"
