name: Firebase Deploy

on:
  push:
    branches: [main]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

  build:
    runs-on: ubuntu-latest
    needs: [unit-test]
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/*.gradle.kts') }}
          restore-keys: |
            gradle-${{ runner.os }}-
      
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build APK (Release)
        run: ./gradlew :app:assembleRelease

  upload-to-firebase:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Decode and configure Firebase credentials
        env:
          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
        run: |
          echo "$FIREBASE_SERVICE_ACCOUNT_KEY" | base64 --decode > $HOME/firebase-service-account.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase-service-account.json" >> $GITHUB_ENV
          
      - name: Distribute APK to Firebase App Distribution
        run: |
          firebase --version
          firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
            --app 1:83005993152:android:3a13b0fb9726bdb7d7fd25 \
            --groups "testers"  # Ensure this group exists in Firebase
  observability:
    runs-on: ubuntu-latest
    needs: [upload-to-firebase]
    steps:
      - name: Log Simulation
        run: |
          echo "Logging user activity..."
          echo "User opens dashboard"
          echo "Build successfully uploaded to Firebase"
      - name: Metric Simulation
        run: |
          echo "Metric: build_success=1"
          echo "Metric: apk_uploaded=1"
          echo "Metric: testers_invited=5"
      - name: Alerting Simulation
        run: echo "If the pipeline fails, send alert (simulated)"

      - name: Synthetic Monitoring
        run: |
          echo "Simulating user interaction: login → dashboard → logout"
